name: pytest

# Only build PRs, the master branch, and releases.
on:
  pull_request:
  push:
    branches:
      - master
  release:
    types:
      - published

jobs:
  test:

    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, ]  # macos, windows]  # Only Linux currently.
        python-version: [3.6, 3.7, 3.8]

    steps:

      # Cancel any previous run of the test job; [pin v0.6.0]
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ce177499ccf9fd2aded3b0426c97e5434c2e8a73
        with:
          access_token: ${{ github.token }}

      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Need to fetch more than the last commit so that setuptools_scm can
          # create the correct version string. If the number of commits since
          # the last release is greater than this, the version still be wrong.
          # Increase if necessary.
          fetch-depth: 100
          # The GitHub token is preserved by default but this job doesn't need
          # to be able to push to GitHub.
          persist-credentials: false

      # Need the tags so that setuptools_scm can form a valid version number
      - name: Fetch git tags
        run: git fetch origin 'refs/tags/*:refs/tags/*'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Test with pytest
        run: pytest --cov=fftlog --flake8

  deploy:
    needs: test
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    # Only from the origin repository, not forks; only master.
    if: github.repository_owner == 'prisae' && github.ref == 'refs/heads/master'

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Need to fetch more than the last commit so that setuptools_scm can
          # create the correct version string. If the number of commits since
          # the last release is greater than this, the version will still be
          # wrong. Increase if necessary.
          fetch-depth: 100
          # The GitHub token is preserved by default but this job doesn't need
          # to be able to push to GitHub.
          persist-credentials: false

      # Need the tags so that setuptools_scm can form a valid version number
      - name: Fetch git tags
        run: git fetch origin 'refs/tags/*:refs/tags/*'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel numpy
          pip install -r requirements-dev.txt

      - name: Build source and wheel distributions
        run: |
          # Change setuptools-scm local_scheme to "no-local-version" so the
          # local part of the version isn't included, making the version string
          # compatible with Test PyPI.
          sed --in-place "s/'root'/'local_scheme':'no-local-version','root'/g" setup.py
          # Build source and wheel packages
          python setup.py sdist
          # python setup.py bdist_wheel
          echo ""
          echo "Generated files:"
          ls -lh dist/

      # # fftlog currently does not use setuptools_scm, hence the version
      # # number has to be adjusted manually; too cumbersome.
      # - name: Publish to Test PyPI
      #   if: success()
      #   # Hash corresponds to v1.4.1
      #   uses: pypa/gh-action-pypi-publish@54b39fb9371c0b3a6f9f14bb8a67394defc7a806
      #   with:
      #     user: __token__
      #     password: ${{ secrets.TEST_PYPI_PASSWORD }}
      #     repository_url: https://test.pypi.org/legacy/
      #     # Allow existing releases on test PyPI without errors.
      #     # NOT TO BE USED in PyPI!
      #     skip_existing: true

      - name: Publish to PyPI
        # Only for releases
        if: success() && github.event_name == 'release'
        # Hash corresponds to v1.4.1
        uses: pypa/gh-action-pypi-publish@54b39fb9371c0b3a6f9f14bb8a67394defc7a806
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
